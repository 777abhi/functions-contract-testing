name: Start Mock Server and Test

on:
  push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Define environment variables
        run: |
          echo "Defining environment variables..."
          echo "MOCK_SERVER_URL=http://localhost:3000" >> $GITHUB_ENV
          echo "AZURE_FUNCTION_URL=http://localhost:7071" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: mock-server/package-lock.json

      - name: Build and start mock server
        run: |
          echo "Starting mock server..."
          cd mock-server
          npm ci
          npm run build
          nohup npm run start & # Run the mock server in the background
          cd ..

      - name: Wait for mock server to be ready
        run: |
          echo "Waiting for mock server to be ready..."
          timeout=120
          while [ $timeout -gt 0 ]; do
            if curl -f $MOCK_SERVER_URL/health; then
              echo "Mock server is ready!"
              break
            fi
            echo "Waiting for mock server... ($timeout seconds remaining)"
            sleep 5
            timeout=$((timeout-5))
          done

          if [ $timeout -le 0 ]; then
            echo "Mock server failed to start within timeout"
            exit 1
          fi

      - name: Test mock server endpoints
        run: |
          echo "Testing mock server endpoints..."
          curl -f $MOCK_SERVER_URL/health
          curl -f $MOCK_SERVER_URL/api/todos
          curl -f $MOCK_SERVER_URL/api/products
          curl -f $MOCK_SERVER_URL/api/orders
          curl -X POST -H "Content-Type: application/json" \
            -d '{"name":"Test User","email":"test@example.com"}' \
            $MOCK_SERVER_URL/api/users
          echo "All mock server tests passed!"

      - name: Install Azure Functions Core Tools
        run: |
          echo "Installing Azure Functions Core Tools..."
          npm install -g azure-functions-core-tools@4 --unsafe-perm

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build and start Azure Function
        run: |
          echo "Starting Azure Function..."
          cd SimpleAzureFunction
          dotnet build
          API_URL=$MOCK_SERVER_URL/api/todos func start --dotnet-isolated &
          cd ..

      - name: Wait for Azure Function to be ready
        run: |
          echo "Waiting for Azure Function to be ready..."
          timeout=120
          while [ $timeout -gt 0 ]; do
            if curl -f $AZURE_FUNCTION_URL/api/GetPublicApiData; then
              echo "Azure Function is ready!"
              break
            fi
            echo "Waiting for Azure Function... ($timeout seconds remaining)"
            sleep 5
            timeout=$((timeout-5))
          done

          if [ $timeout -le 0 ]; then
            echo "Azure Function failed to start within timeout"
            exit 1
          fi
